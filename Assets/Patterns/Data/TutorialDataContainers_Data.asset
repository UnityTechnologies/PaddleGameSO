%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 1841b7fe398674bcda282482872188a9, type: 3}
  m_Name: TutorialDataContainers_Data
  m_EditorClassIdentifier: 
  m_Description: Content data for the Data Containers tutorial screen.
  m_Title: Data containers
  m_BodyText:
  - "ScriptableObjects excel at storing static runtime data. Use them for item and
    players statistics, gameplay values, character dialogue, etc.\n\nThis example
    shows how to store a credit list as text data. Click the <b>Select</b> button
    to view the ScriptableObject in the <b>Inspector</b>. \n\nMake changes and then
    click the <b>Update</b> button to see the results. You can also exit Play mode
    and return to this screen."
  - 'Because the ScriptableObject is an asset, changes to it at runtime persist even
    when exiting Play mode. This can help designers save gameplay settings while
    playtesting.


    ScripableObject data can be shared across multiple GameObjects
    or even with other ScriptableObjects.


    Unlike a MonoBehaviour, a ScriptableObject
    doesn''t need to be attached to a GameObject.'
  - "Note that while ScriptableObjects can persist data, they are not intended for
    saving or loading runtime data between sessions. \n\nFor that, use a serialization
    system to save and load data (e.g. JSON or XML saver, database, PlayerPrefs,
    etc.)"
  m_Prefabs: []
